rm -rf tdir
mkdir -p tdir
=== Testing STCC1 Small C Compiler ===
Using simple test program: src/test/simpletest.c

# Preprocess the simple test program (no system headers)
cat src/test/simpletest.c > tdir/simpletest.i
# Run lexical analysis (cc0)
1. Running lexical analysis...
bin/cc0 tdir/simpletest.i tdir/sstore.out tdir/tokens.out 2>&1 > tdir/cc0.out
   ✓ Lexical analysis completed
# Display tokens (cc0t)
2. Generating token display...
bin/cc0t tdir/sstore.out tdir/tokens.out > tdir/tokens_display.out
   ✓ Token display generated
# Run parser and AST generation (cc1)
3. Running parser and AST generation...
bin/cc1 tdir/sstore.out tdir/tokens.out tdir/ast.out tdir/sym.out > tdir/cc1.out 2>&1
   ✓ Parsing completed successfully
# Display AST and symbol table (cc1t)
4. Generating AST and symbol table display...
bin/cc1t tdir/sstore.out tdir/ast.out tdir/sym.out > tdir/ast_display.out
   ✓ AST/Symbol table display generated
# Run TAC generation (cc2)
5. Running TAC generation...
bin/cc2 tdir/sstore.out tdir/tokens.out tdir/ast.out tdir/sym.out tdir/tac.out tdir/tac_output.tac > tdir/cc2.out 2>&1
   ✓ TAC generation completed
# Display TAC analysis (cc2t)
6. Generating TAC analysis...
bin/cc2t tdir/tac.out > tdir/tac_display.out 2>/dev/null
   ✓ TAC analysis generated

=== Test Results ===
Input program:
--------------------------------
int x;
int y = 5;

int main() {
    x = 42;
    return x;
}
--------------------------------

Tokens generated (first 3 lines):
int x ; 
int y = 5 ; 


Parser summary:
nodes: 61
tokens: 22
sstoreidx: 0 sstoresize: 52

AST and Symbol analysis:
Showing first 20 AST nodes:
... (61 total AST nodes, showing first 20)
Symbol table contains 3 entries

TAC generation summary:
nodes: 61
tokens: 22
sstoreidx: 0 sstoresize: 52

Generated TAC Instructions:
--------------------------------
=== STCC1 TAC Inspection Tool (CC2T) ===
Analyzing TAC file: tdir/tac.out

=== TAC File Analysis ===
File: tdir/tac.out
Size: 64 bytes
Instructions: 2

=== TAC Instructions ===
=== TAC Instructions ===
Total instructions: 2

[   1] t1 = v7 assign 0
[   2] return 0


=== TAC Statistics ===
Total instructions: 2
Memory usage: 64 bytes

--------------------------------

TAC analysis:
Total instructions: 2
=== TAC Statistics ===

✓ All compiler components working correctly!
📁 Detailed output files saved in tdir/
🔍 Use 'make test' for extended testing
🔧 Use 'cc2t tdir/tac.out' for detailed TAC analysis
=== Test Complete ===
