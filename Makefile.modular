# Additional Makefile targets for the modular AST system

# Enhanced source files for modular AST
ENHANCED_SRC = $(SRCDIR)/ast_builder.c $(SRCDIR)/ast_visitor.c $(SRCDIR)/error_handler.c $(SRCDIR)/enhanced_parser.c $(SRCDIR)/modular_compiler.c

# Enhanced object files
ENHANCED_OBJ = $(OBJDIR)/ast_builder.o $(OBJDIR)/ast_visitor.o $(OBJDIR)/error_handler.o $(OBJDIR)/enhanced_parser.o $(OBJDIR)/modular_compiler.o

# Modular compiler executable
MODULAR_OUT = $(BINDIR)/stcc1_modular

# Build modular compiler
modular: $(OBJDIR) $(BINDIR) $(MODULAR_OUT)

$(MODULAR_OUT): $(ENHANCED_OBJ) $(OBJ1)
	$(CC) $(CFLAGS) -o $(MODULAR_OUT) $(ENHANCED_OBJ) $(OBJDIR)/sstore.o $(OBJDIR)/tstore.o $(OBJDIR)/hash.o $(OBJDIR)/hmapbuf.o $(OBJDIR)/symtab.o

# Test the modular compiler
test_modular: modular
	rm -rf $(TESTDIR)
	mkdir -p $(TESTDIR)
	$(CC) $(CFLAGS) -E $(SRCDIR)/cc0.c > $(TESTDIR)/test_input.c
	$(OUT0) $(TESTDIR)/test_input.c $(TESTDIR)/sstore.out $(TESTDIR)/tokens.out
	$(MODULAR_OUT) $(TESTDIR)/sstore.out $(TESTDIR)/tokens.out $(TESTDIR)/ast.out $(TESTDIR)/output.s
	@echo "=== Modular compilation test complete ==="
	@echo "Generated assembly in $(TESTDIR)/output.s"

# Demonstration of AST phases
demo_ast: modular
	@echo "=== AST Modular System Demonstration ==="
	@echo "1. Building sample AST..."
	@echo "2. Running semantic analysis..."
	@echo "3. Applying optimizations..."
	@echo "4. Generating code..."
	$(MODULAR_OUT) demo demo demo demo

# Memory profiling target
profile_memory: modular
	valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all $(MODULAR_OUT) demo demo demo demo

.PHONY: modular test_modular demo_ast profile_memory
